plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'de.philx'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // H2 DB
    implementation 'com.h2database:h2'

    // Lombok
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

}

tasks.named('test') {
    useJUnitPlatform()
}


// Auto Frontend Build
import org.apache.tools.ant.taskdefs.condition.Os

import java.io.ByteArrayOutputStream

task buildFrontend {
    def npmPath = new ByteArrayOutputStream()

    def npm = ''

    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        npm = 'npm.cmd'
    } else {
        exec {
            commandLine 'which', 'npm'
            standardOutput = npmPath
        }

        npm = npmPath.toString().trim()
    }

    doLast {
        exec {
            workingDir = file("react")
            commandLine npm, 'install'
        }
        exec {
            workingDir = file("react")
            commandLine npm, 'run', 'build'
        }
    }
}

task copyFrontend(type: Copy) {
    dependsOn buildFrontend
    from 'react/build'
    into 'src/main/resources/static'
}

processResources.dependsOn copyFrontend